<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--使用默认的Servlet来响应静态文件-->
    <mvc:default-servlet-handler />

    <!--使用注解包配置-->
    <context:component-scan base-package="com.xxh.web.controller" />
    <context:annotation-config />
    <mvc:annotation-driven>
        <!--设置不使用默认的消息转换器-->
        <mvc:message-converters register-defaults="false">
            <!--配置spring的转换器-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />

            <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />

            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />

            <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />

            <!--xml解析：这里需求是如果VO有配置到xml注解的，优先返回xml格式的数据，没有再考虑json格式。
            那么这段配置一定要在fastjson配置前面，而且必须加上supportedMediaTypes配置。否则都是以JSON格式返回-->
            <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" >
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/xml;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>

            <!--配置fastjson中实现HttpMessageConverter接口的转换器-->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" >
                <!--加入支持的媒体类型，返回contentType-->
                <property name="supportedMediaTypes">
                    <list>
                        <!--这里顺序不能反，一定要先写text/html，不然IE下会出现下载提示-->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--Thymeleaf 视图解析器，优先级最高-->
    <bean id="templateResolver"
          class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="LEGACYHTML5" />
        <property name="order" value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" />
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
    </bean>


    <!--配置默认视图解析器，这里只能解析jsp后缀的页面，不能解析html后缀的页面，优先级最低-->
    <bean id="viewResolver"
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>

        <property name="order" value="#{T(org.springframework.core.Ordered).LOWEST_PRECEDENCE}" />
    </bean>

    <!--静态资源配置-->
    <!--<mvc:resources location="/static/" mapping="/static/**"/>-->

</beans>